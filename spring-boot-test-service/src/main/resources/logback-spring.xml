<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">

    <property name="log_dir" value="/home/log/spring-boot-test/service/" />
    <!-- 日志最大的历史 30天 -->
    <property name="maxHistory" value="30" />

    <!-- ConsoleAppender 控制台输出日志 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                <!-- 设置日志输出格式 -->
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- ERROR级别日志 -->
    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 RollingFileAppender -->
    <appender name="SERVICE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录ERROR级别的日志 -->
        <file>service-error.log</file>
        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责触发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志输出位置 可相对、和绝对路径 -->
            <fileNamePattern>
                ${log_dir}/service-error.%d{yyyy-MM-dd}.log
            </fileNamePattern>
            <!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6， 则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件是，那些为了归档而创建的目录也会被删除 -->
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <!-- 设置日志输出格式 -->
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n
            </pattern>
        </encoder>
    </appender>

    <appender name="SERVICE-INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>service-info.log</file>
        <!-- 基于文件大小和时间的双重滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>
                <!-- 每日 指定大小(单文件100M)分割 -->
                ${log_dir}/service-info.%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n
            </pattern>
        </encoder>
    </appender>
    <appender name="MODULE-INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>module-info.log</file>
        <!-- 基于文件大小和时间的双重滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>
                <!-- 每日 指定大小(单文件100M)分割 -->
                ${log_dir}/module-info.%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n
            </pattern>
        </encoder>
    </appender>
    <appender name="ALL-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>all-error.log</file>
        <!-- 基于文件大小和时间的双重滚动策略 -->
         <filter class="ch.qos.logback.classic.filter.ThresholdFilter">  
            <level>ERROR</level>  
        </filter>  
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>
                <!-- 每日 指定大小(单文件100M)分割 -->
                ${log_dir}/all-error.%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <!-- each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n
            </pattern>
        </encoder>
    </appender>

    <logger name="com.liqiang.springboot.module" level="INFO" additivty="false">
        <appender-ref ref="SERVICE-INFO"/>
    </logger>

    <logger name="com.liqiang.springboot.service" level="INFO" additivty="true">
        <appender-ref ref="SERVICE-ERROR"/>
    </logger>

    <logger name="com.liqiang.springboot" level="ERROR" additivty="true">
        <appender-ref ref="ALL-ERROR"/>
    </logger>


    <root level="${log.level}">
        <appender-ref ref="console" />
    </root>
</configuration>